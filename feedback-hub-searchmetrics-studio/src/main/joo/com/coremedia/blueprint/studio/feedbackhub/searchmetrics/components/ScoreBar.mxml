<?xml version="1.0" encoding="UTF-8"?>
<local:ScoreBarBase
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:exml="http://www.jangaroo.net/exml/0.8"
        xmlns="exml:ext.config"
        xmlns:ui="exml:com.coremedia.ui.config"
        xmlns:local="com.coremedia.blueprint.studio.feedbackhub.searchmetrics.components.*">
  <fx:Metadata>
    [ResourceBundle('com.coremedia.blueprint.studio.feedbackhub.searchmetrics.FeedbackHubSearchmetrics')]
  </fx:Metadata>
  <fx:Script><![CDATA[
    import com.coremedia.blueprint.studio.feedbackhub.searchmetrics.CustomStyles;
    import com.coremedia.ui.data.ValueExpressionFactory;

    public static const xtype:String = "com.coremedia.blueprint.studio.feedbackhub.searchmetrics.config.ScoreBar";

    private var config:ScoreBar;

    public native function ScoreBar(config:ScoreBar = null);
    ]]></fx:Script>

  <local:items>
    <Container>
      <items>
        <DisplayField padding="0 4 0 0" value="{config.label}"/>
        <ui:IconDisplayField tooltip="{config.qtip}"
                             iconCls="{resourceManager.getString('com.coremedia.icons.CoreIcons', 'help')}">
          <ui:plugins>
            <ui:BindVisibilityPlugin bindTo="{ValueExpressionFactory.createFromValue(config.qtip)}"/>
          </ui:plugins>
        </ui:IconDisplayField>
        <Container flex="1"/>
        <DisplayField ui="{null}" style="{CustomStyles.COUNTER_LABEL + 'padding-top: 4px;'}">
          <plugins>
            <ui:BindPropertyPlugin componentProperty="value" bindTo="{config.bindTo.extendBy(config.propertyName)}"
                                   transformer="{formatScore}"/>
            <ui:BindVisibilityPlugin
                    bindTo="{ValueExpressionFactory.createFromValue(!(config.showScoreValue === false))}"/>
          </plugins>
        </DisplayField>
        <local:InfoText style="color: #b3b1b1;padding-top: 4px;">
          <local:plugins>
            <ui:BindPropertyPlugin componentProperty="value" bindTo="{getUnitExpression(config)}"/>
            <ui:BindVisibilityPlugin
                    bindTo="{ValueExpressionFactory.createFromValue(!(config.showScoreValue === false))}"/>
          </local:plugins>
        </local:InfoText>
      </items>
      <plugins>
        <ui:BindVisibilityPlugin bindTo="{ValueExpressionFactory.createFromValue(config.label !== undefined)}"/>
      </plugins>
      <layout>
        <layout_HBox align="stretch"/>
      </layout>
    </Container>
    <DisplayField itemId="{BAR_ITEM_ID}" html="true"/>
    <Container style="margin-top: -12px;">
      <items>
        <DisplayField value="{config.startLabel}"/>
        <Container flex="1"/>
        <DisplayField value="{config.endLabel}"/>
      </items>
      <layout>
        <layout_HBox align="stretch"/>
      </layout>
      <plugins>
        <ui:BindVisibilityPlugin bindTo="{ValueExpressionFactory.createFromValue(!(config.startLabel === undefined))}"/>
      </plugins>
    </Container>
  </local:items>
  <local:layout>
    <layout_VBox align="stretch" pack="center"/>
  </local:layout>
</local:ScoreBarBase>
